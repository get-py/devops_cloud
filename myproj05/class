# 필수 자료구조

    5. 튜플(tuple): 변경 불가능(Immutable)한 특성
        [] = 무조건 list,
        {} = set, dict
        () = 수학적 우선순위 연산자 so 무조건 tuple 아님 
        , <- comma가 있어야 tuple
        여러분의 코드에서는 튜플 타입의 변수를 선언하지 마세요
    

    6. 집합(set): 중복을 허용하지 않는 값들의 모음(사용빈도: list, dict >>>> tuple >> set)
        - 특징
            + 중복 값을 알아서 걸러줌
            + 저장된 순서를 유지하지 않음
            + 추가 somelist.add("아이유")
            + 제거 somelist.remove("방탄소년단")

        - 표기방법
            A | B = 합집합
            A & B = 교집합
            A - B = 차집합
            A ^ B = 대칭차집합(합집합 - 교집합)

    7. 리스트/튜플도 사전으로 변경가능
        - int("10")
        - str(10)
        - tuple([1, 2, 3])
        - list((1, 2, 3))
        - set([1, 2, 3, 1])
        # 사전은 key/value 가 있어야함
        - dict([('k1', 'v1'),('k2', 'v2')]) -> {'k1': 'v1', 'k2': 'v2'}


# 주요 빌트인 함수와 정렬
    1. sorted: 정렬된 리스트를 반환
        number_list = [25, 19, 45, 32]
        sorted(number_list, reverse = True)
        def sort_fn(value):
            return value % 10

        sorted(number_list, key=sort_fn)

    2. filter: 지정 함수로 필터링된 결과를 순차적으로 생산하는 iterater 
        In [1]: numbers = [0, 1,2,3,4,5,6,7,8,9,10]

        In [2]: def check_even_number(number):
        ...:     return number % 2 == 0
        ...:

        In [4]: list(filter(check_even_number, numbers))
        Out[4]: [0, 2, 4, 6, 8, 10]

    3. map
        iterator = map(변환함수, iterable)

        TDD(Test Driven Development) - 테스트 주도 개발 아주 중요